{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","transitions/slide.module.css","transitions/slideError.module.css","components/Filter/Filter.module.css","transitions/pop.module.css","components/App.module.css","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","components/App.js","index.js"],"names":["module","exports","Notification","className","ContactForm","state","name","number","error","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","onSubmit","find","contact","toLowerCase","resetState","setTimeout","this","s","contactForm","contactFormInput","type","onChange","contactFormButton","CSSTransition","in","timeout","classNames","slideErrorTransition","unmountOnExit","Component","Filter","filter","ContactsItem","onDelete","button","onClick","x1","y1","x2","y2","stroke","strokeWidth","ContactsList","children","TransitionGroup","component","contactsList","map","key","id","slideTransition","contactsListItem","filterContacts","includes","App","show","addContact","contactToAdd","uuidv4","handleDeleteContact","length","filteredContacts","heading","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b0ff326.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3yPLQ\",\"contactsListItem\":\"ContactsList_contactsListItem__3ytOl\",\"name\":\"ContactsList_name__tOV-l\",\"number\":\"ContactsList_number__1qQ1c\",\"button\":\"ContactsList_button__3OPS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__ZbVCx\",\"contactFormInput\":\"ContactForm_contactFormInput__1X5jF\",\"contactFormButton\":\"ContactForm_contactFormButton__2mVnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1LvP6\",\"enterActive\":\"slide_enterActive__2dhkB\",\"exit\":\"slide_exit__2Jooi\",\"exitActive\":\"slide_exitActive__2UM81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideError_enter__2y0r-\",\"enterActive\":\"slideError_enterActive__Vu2se\",\"exit\":\"slideError_exit__2ksXw\",\"exitActive\":\"slideError_exitActive__3B0eZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__kmxQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__P3huS\",\"enterActive\":\"pop_enterActive__8BB65\",\"exit\":\"pop_exit__u5Qf1\",\"exitActive\":\"pop_exitActive__8pJmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__OiS2Z\"};","import React from \"react\";\nimport \"react-notifications/lib/notifications.css\";\n\nconst Notification = () => {\n  return (\n    <div className=\"notification-container\">\n      <h1 className=\"notification  notification-error \">\n        Contact already exist!\n      </h1>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Notification from \"../Notification/Notification\";\n\nimport s from \"../ContactForm/ContactForm.module.css\";\nimport slideErrorTransition from \"../../transitions/slideError.module.css\";\nimport \"react-notifications/lib/notifications.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { name: \"\", number: \"\", error: false };\n\n  resetState() {\n    this.setState({ name: \"\", number: \"\" });\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name } = this.state;\n    const { contacts, onSubmit } = this.props;\n\n    if (!name) return;\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setState({ error: true });\n      this.resetState();\n      setTimeout(() => this.setState({ error: false }), 2000);\n      return;\n    }\n\n    onSubmit({ ...this.state });\n\n    this.resetState();\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={s.contactForm} onSubmit={this.handleSubmit}>\n          <label className={s.contactFormInput}>\n            <span>Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.contactFormInput}>\n            <span>Number</span>\n            <input\n              type=\"number\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.contactFormButton} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n\n        <CSSTransition\n          in={this.state.error}\n          timeout={250}\n          classNames={slideErrorTransition}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={s.filter}>\n      Find contact by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsItem = ({ name, number, onDelete }) => {\n  return (\n    <Fragment>\n      <span className={s.name}>{name}</span>\n      <span className={s.number}>{number}</span>\n      <button className={s.button} type=\"button\" onClick={onDelete}>\n        <svg>\n          <line x1=\"1\" y1=\"1\" x2=\"13\" y2=\"13\" stroke=\"white\" strokeWidth=\"3\" />\n          <line x1=\"13\" y1=\"1\" x2=\"1\" y2=\"13\" stroke=\"white\" strokeWidth=\"3\" />\n        </svg>\n      </button>\n    </Fragment>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React, { Fragment } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nimport ContactsItem from \"./ContactItem\";\nimport slideTransition from \"../../transitions/slide.module.css\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsList = ({ contacts, onDelete, children }) => {\n  return (\n    <Fragment>\n      {children}\n\n      <TransitionGroup component=\"ul\" className={s.contactsList}>\n        {contacts.map((contact) => (\n          <CSSTransition\n            key={contact.id}\n            timeout={250}\n            classNames={slideTransition}\n            unmountOnExit\n          >\n            <li className={s.contactsListItem}>\n              <ContactsItem\n                {...contact}\n                onDelete={() => onDelete(contact.id)}\n              />\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Fragment>\n  );\n};\n\nContactsList.propTypes = {\n  children: PropTypes.node,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default ContactsList;\n","import React, { Component, Fragment } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactsList from \"./ContactsList/ContactsList\";\n\nimport \"../index.css\";\nimport slideTransition from \"../transitions/slide.module.css\";\nimport popTransition from \"../transitions/pop.module.css\";\nimport s from \"./App.module.css\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      {\n        id: \"611a6308-e6f2-4506-b4cc-266e5951ab27\",\n        name: \"Annie Copeland\",\n        number: \"5555555\",\n      },\n      {\n        id: \"cbc75291-de64-44c1-a0f9-36e7f0e450de\",\n        name: \"Jim Black\",\n        number: \"5555555\",\n      },\n      {\n        id: \"a39e6b5b-91c3-4a14-b16f-a63cb88c90cb\",\n        name: \"Rod Tos\",\n        number: \"5555555\",\n      },\n    ],\n    filter: \"\",\n    show: false,\n  };\n\n  componentDidMount() {\n    this.setState({ show: true });\n  }\n\n  addContact = (contact) => {\n    const contactToAdd = {\n      ...contact,\n      id: uuidv4(),\n    };\n\n    this.setState((state) => ({\n      contacts: [...state.contacts, contactToAdd],\n    }));\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleDeleteContact = (id) => {\n    const { contacts, filter } = this.state;\n\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    if (filteredContacts.length === 1) {\n      this.setState({ filter: \"\" });\n    }\n  };\n\n  render() {\n    const { contacts, filter, show } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <Fragment>\n        <CSSTransition in={show} timeout={500} classNames={slideTransition}>\n          <h2 className={s.heading}>Phonebook</h2>\n        </CSSTransition>\n\n        <ContactForm contacts={contacts} onSubmit={this.addContact} />\n        {contacts.length >= 1 && (\n          <ContactsList\n            contacts={filteredContacts}\n            onDelete={this.handleDeleteContact}\n          >\n            <CSSTransition\n              in={contacts.length >= 2}\n              timeout={250}\n              classNames={popTransition}\n              unmountOnExit\n            >\n              <Filter filter={filter} onChange={this.handleChange} />\n            </CSSTransition>\n          </ContactsList>\n        )}\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}